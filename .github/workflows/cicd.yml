name: Deploy Project to AWS Lambda and ECR

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-2
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  provision-aws:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.1.7

      - name: Terraform Init with S3 backend
        run: |
          terraform init \
            -backend-config="bucket=mvilsoet-bucket" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}"
        working-directory: ./terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform

      - name: Provision AWS resources
        run: terraform apply -auto-approve
        working-directory: ./terraform

      - name: Get ECR Repository Name
        id: ecr_output
        run: |
          ECR_REPOSITORY=$(terraform output -raw ecr_repository_name)
          echo "ECR_REPOSITORY=$ECR_REPOSITORY" >> $GITHUB_OUTPUT
        working-directory: ./terraform

    outputs:
      ECR_REPOSITORY: ${{ steps.ecr_output.outputs.ECR_REPOSITORY }}

  build-and-push:
    needs: provision-aws
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lambda:
          - name: trajectory
            tag: trajectory
          - name: lights
            tag: lights
          - name: roadValidation
            tag: roadValidation
          - name: stateDump
            tag: stateDump

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push ${{ matrix.lambda.name }}
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx build \
            --build-arg LAMBDA_FILE=${{ matrix.lambda.name }} \
            --tag $ECR_REGISTRY/${{ needs.provision-aws.outputs.ECR_REPOSITORY }}:${{ matrix.lambda.tag }}-${IMAGE_TAG} \
            --push .
    
  deploy-ansible:
    needs: [provision-aws, build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ansible and dependencies
        run: |
          sudo apt-get update
          sudo apt-get remove -y ansible
          sudo apt-get install -y python3-pip
          pip3 install --upgrade pip
          pip3 install --user "ansible>=2.10" boto3 botocore
          export PATH="$HOME/.local/bin:$PATH"
          ansible --version
          which ansible
  
      - name: Install Ansible Collections
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          ansible-galaxy collection install community.aws
          ansible-galaxy collection install amazon.aws
          ansible-galaxy collection list
  
      - name: Ansible Configuration
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          ansible-config dump --only-changed
  
      - name: List Ansible Modules
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          ansible-doc -l | grep aws
  
      - name: Run Ansible Playbook to deploy Lambda functions and API Gateway
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          GITHUB_SHA: ${{ github.sha }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          ECR_REPOSITORY: ${{ needs.provision-aws.outputs.ECR_REPOSITORY }}
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          ansible-playbook ansible/playbook.yml -vvv

