name: Deploy Project to AWS Lambda and ECR

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-2
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: traffic-simulation-lambda-repo

jobs:
  provision-aws:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.1.7

      - name: Terraform Init with S3 backend
        run: |
          terraform init \
            -backend-config="bucket=mvilsoet-bucket" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}"
        working-directory: ./terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform

      - name: Provision AWS resources
        run: terraform apply -auto-approve
        working-directory: ./terraform

  build-and-update:
    needs: provision-aws
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lambda:
          - name: trajectory
            tag: trajectory
          - name: lights
            tag: lights
          - name: roadValidation
            tag: roadValidation
          - name: stateDump
            tag: stateDump

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: ${{ env.AWS_REGION }}

      - name: Build and push ${{ matrix.lambda.name }}
        env:
          ECR_REGISTRY: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --build-arg LAMBDA_FILE=${{ matrix.lambda.name }} \
            --tag $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ matrix.lambda.tag }}-${IMAGE_TAG} \
            --push .

      - name: Update Lambda Function Code
        env:
          FUNCTION_NAME: ${{ matrix.lambda.name }}
          IMAGE_URI: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ matrix.lambda.tag }}-${{ github.sha }}
        run: |
          aws lambda update-function-code \
            --function-name $FUNCTION_NAME \
            --image-uri $IMAGE_URI \
            --region ${{ env.AWS_REGION }}
